SCHM0106

HEADER
{
 FREEID 57
 VARIABLES
 {
  #ARCHITECTURE="behavior"
  #BLOCKTABLE_FILE="#HDL2DIAGRAM.bde"
  #DEFAULT_RANGE0="<range<index=\"0\"><name=\"opcode\"><left=\"24\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE1="<range<index=\"0\"><name=\"rd\"><left=\"127\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE2="<range<index=\"0\"><name=\"rs1\"><left=\"127\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE3="<range<index=\"0\"><name=\"rs1_temp\"><left=\"31\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE4="<range<index=\"0\"><name=\"rs1_temp_long\"><left=\"63\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE5="<range<index=\"0\"><name=\"rs2\"><left=\"127\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE6="<range<index=\"0\"><name=\"rs2_temp\"><left=\"15\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE7="<range<index=\"0\"><name=\"rs2_temp_long\"><left=\"31\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE8="<range<index=\"0\"><name=\"rs3\"><left=\"127\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE9="<range<index=\"0\"><name=\"rs3_temp\"><left=\"15\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #DEFAULT_RANGE10="<range<index=\"0\"><name=\"rs3_temp_long\"><left=\"31\"><direction=\"downto\"><right=\"0\"><initial_value=\"\"><delay=\"\">>"
  #ENTITY="ALU"
  #LANGUAGE="VHDL"
  AUTHOR="jonathan.huang.3@stonybrook.edu"
  COMPANY="Stony Brook University"
  CREATIONDATE="11/29/2021"
  SOURCE="..\\src\\ALU.vhd"
 }
}

PAGE ""
{
 PAGEHEADER
 {
  MARGINS (200,200,200,200)
  RECT (0,0,0,0)
 }
 
 BODY
 {
  VHDLDESIGNUNITHDR  1, 0, 0
  {
   LABEL "Design Unit Header"
   TEXT 
"library ieee;\n"+
"use ieee.std_logic_1164.all;\n"+
"use ieee.NUMERIC_STD.all;"
   RECT (220,260,620,472)
   MARGINS (20,20)
   MULTILINE
   SYNTAXCOLORED
   SHOWLABEL
   SHOWTEXT
   CORNER 10
  }
  PROCESS  2, 0, 0
  {
   LABEL "process_29"
   TEXT 
"process (opcode,rs1,rs2,rs3)\n"+
"                         variable check : std_logic_vector(127 downto 0);\n"+
"                         variable temp : std_logic_vector(127 downto 0);\n"+
"                         variable temp2 : std_logic_vector(127 downto 0);\n"+
"                         variable check_pos_long : std_logic_vector(63 downto 0);\n"+
"                         variable check_neg_long : std_logic_vector(63 downto 0);\n"+
"                         variable check_pos_int : std_logic_vector(31 downto 0);\n"+
"                         variable check_neg_int : std_logic_vector(31 downto 0);\n"+
"                         variable check_pos_16bit : std_logic_vector(15 downto 0);\n"+
"                         variable check_neg_16bit : std_logic_vector(15 downto 0);\n"+
"                         variable counter : integer := 0;\n"+
"                       begin\n"+
"                         for i in 0 to 62 loop\n"+
"                             check_pos_long(i) := '1';\n"+
"                             if (i < 31) then\n"+
"                                check_pos_int(i) := '1';\n"+
"                             end if;\n"+
"                             if (i < 15) then\n"+
"                                check_pos_16bit(i) := '1';\n"+
"                             end if;\n"+
"                         end loop;\n"+
"                         check_pos_long(63) := '0';\n"+
"                         check_neg_long(63) := '1';\n"+
"                         check_pos_int(31) := '0';\n"+
"                         check_neg_int(31) := '1';\n"+
"                         check_pos_16bit(15) := '0';\n"+
"                         check_neg_16bit(15) := '1';\n"+
"                         case std_logic_vector'(opcode(24), opcode(23)) is \n"+
"                           when \"00\" => \n"+
"                              rd <= std_logic_vector(resize(signed(opcode(20 downto 5)),rd'length));\n"+
"                           when \"01\" => \n"+
"                              rd <= std_logic_vector(resize(signed(opcode(20 downto 5)),rd'length));\n"+
"                           when \"10\" => \n"+
"                              case std_logic_vector'(opcode(22), opcode(21), opcode(20)) is \n"+
"                                when \"000\" => \n"+
"                                   rs3_temp <= rs3(15 downto 0);\n"+
"                                   rs2_temp <= rs2(15 downto 0);\n"+
"                                   rs1_temp <= rs1(31 downto 0);\n"+
"                                   check := std_logic_vector(resize(signed(((signed(rs3_temp) * signed(rs2_temp)) + signed(rs1_temp))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_int))) then\n"+
"                                      check(31 downto 0) := check_pos_int;\n"+
"                                   elsif ((signed(check) < signed(check_neg_int))) then\n"+
"                                      check(31 downto 0) := check_neg_int;\n"+
"                                   end if;\n"+
"                                   rd <= std_logic_vector(check);\n"+
"                                when \"001\" => \n"+
"                                   rs1_temp <= rs1(31 downto 0);\n"+
"                                   rs2_temp <= rs2(31 downto 16);\n"+
"                                   rs3_temp <= rs3(31 downto 16);\n"+
"                                   check := std_logic_vector(resize(signed(((signed(rs3_temp) * signed(rs2_temp)) + signed(rs1_temp))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_int))) then\n"+
"                                      check(31 downto 0) := check_pos_int;\n"+
"                                   elsif ((signed(check) < signed(check_neg_int))) then\n"+
"                                      check(31 downto 0) := check_neg_int;\n"+
"                                   end if;\n"+
"                                   rd <= std_logic_vector(check);\n"+
"                                when \"010\" => \n"+
"                                   rs3_temp <= rs3(15 downto 0);\n"+
"                                   rs2_temp <= rs2(15 downto 0);\n"+
"                                   rs1_temp <= rs1(31 downto 0);\n"+
"                                   check := std_logic_vector(resize(signed(((signed(rs3_temp) * signed(rs2_temp)) - signed(rs1_temp))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_int))) then\n"+
"                                      check(31 downto 0) := check_pos_int;\n"+
"                                   elsif ((signed(check) < signed(check_neg_int))) then\n"+
"                                      check(31 downto 0) := check_neg_int;\n"+
"                                   end if;\n"+
"                                   rd <= std_logic_vector(check);\n"+
"                                when \"011\" => \n"+
"                                   rs1_temp <= rs1(31 downto 0);\n"+
"                                   rs2_temp <= rs2(31 downto 16);\n"+
"                                   rs3_temp <= rs3(31 downto 16);\n"+
"                                   check := std_logic_vector(resize(signed(((signed(rs3_temp) * signed(rs2_temp)) - signed(rs1_temp))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_int))) then\n"+
"                                      check(31 downto 0) := check_pos_int;\n"+
"                                   elsif ((signed(check) < signed(check_neg_int))) then\n"+
"                                      check(31 downto 0) := check_neg_int;\n"+
"                                   end if;\n"+
"                                   rd <= std_logic_vector(check);\n"+
"                                when \"100\" => \n"+
"                                   rs3_temp_long <= rs3(31 downto 0);\n"+
"                                   rs2_temp_long <= rs2(31 downto 0);\n"+
"                                   rs1_temp_long <= rs1(63 downto 0);\n"+
"                                   check := std_logic_vector(resize(signed(((signed(rs3_temp_long) * signed(rs2_temp_long)) + signed(rs1_temp_long))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_long))) then\n"+
"                                      check(63 downto 0) := check_pos_long;\n"+
"                                   elsif ((signed(check) < signed(check_neg_long))) then\n"+
"                                      check(63 downto 0) := check_neg_long;\n"+
"                                   end if;\n"+
"                                   rd <= std_logic_vector(check);\n"+
"                                when \"101\" => \n"+
"                                   rs3_temp_long <= rs3(63 downto 32);\n"+
"                                   rs2_temp_long <= rs2(63 downto 32);\n"+
"                                   rs1_temp_long <= rs1(63 downto 0);\n"+
"                                   check := std_logic_vector(resize(signed(((signed(rs3_temp_long) * signed(rs2_temp_long)) + signed(rs1_temp_long))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_long))) then\n"+
"                                      check(63 downto 0) := check_pos_long;\n"+
"                                   elsif ((signed(check) < signed(check_neg_long))) then\n"+
"                                      check(63 downto 0) := check_neg_long;\n"+
"                                   end if;\n"+
"                                   rd <= std_logic_vector(check);\n"+
"                                when \"110\" => \n"+
"                                   rs3_temp_long <= rs3(31 downto 0);\n"+
"                                   rs2_temp_long <= rs2(31 downto 0);\n"+
"                                   rs1_temp_long <= rs1(63 downto 0);\n"+
"                                   check := std_logic_vector(resize(signed(((signed(rs3_temp_long) * signed(rs2_temp_long)) - signed(rs1_temp_long))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_long))) then\n"+
"                                      check(63 downto 0) := check_pos_long;\n"+
"                                   elsif ((signed(check) < signed(check_neg_long))) then\n"+
"                                      check(63 downto 0) := check_neg_long;\n"+
"                                   end if;\n"+
"                                   rd <= std_logic_vector(check);\n"+
"                                when \"111\" => \n"+
"                                   rs3_temp_long <= rs3(63 downto 32);\n"+
"                                   rs2_temp_long <= rs2(63 downto 32);\n"+
"                                   rs1_temp_long <= rs1(63 downto 0);\n"+
"                                   check := std_logic_vector(resize(signed(((signed(rs3_temp_long) * signed(rs2_temp_long)) - signed(rs1_temp_long))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_long))) then\n"+
"                                      check(63 downto 0) := check_pos_long;\n"+
"                                   elsif ((signed(check) < signed(check_neg_long))) then\n"+
"                                      check(63 downto 0) := check_neg_long;\n"+
"                                   end if;\n"+
"                                   rd <= std_logic_vector(check);\n"+
"                                when others => \n"+
"                                   null;\n"+
"                              end case;\n"+
"                           when \"11\" => \n"+
"                              case std_logic_vector'(opcode(18), opcode(17), opcode(16), opcode(15)) is \n"+
"                                when \"0000\" => \n"+
"                                   null;\n"+
"                                when \"0001\" => \n"+
"                                   check(15 downto 0) := std_logic_vector(unsigned(rs1(15 downto 0)) + unsigned(rs2(15 downto 0)));\n"+
"                                   check(31 downto 16) := std_logic_vector(unsigned(rs1(31 downto 16)) + unsigned(rs2(31 downto 16)));\n"+
"                                   check(47 downto 32) := std_logic_vector(unsigned(rs1(47 downto 32)) + unsigned(rs2(47 downto 32)));\n"+
"                                   check(63 downto 48) := std_logic_vector(unsigned(rs1(63 downto 48)) + unsigned(rs2(63 downto 48)));\n"+
"                                   check(79 downto 64) := std_logic_vector(unsigned(rs1(79 downto 64)) + unsigned(rs2(79 downto 64)));\n"+
"                                   check(95 downto 80) := std_logic_vector(unsigned(rs1(95 downto 80)) + unsigned(rs2(95 downto 80)));\n"+
"                                   check(111 downto 96) := std_logic_vector(unsigned(rs1(111 downto 96)) + unsigned(rs2(111 downto 96)));\n"+
"                                   check(127 downto 112) := std_logic_vector(unsigned(rs1(127 downto 112)) + unsigned(rs2(127 downto 112)));\n"+
"                                   rd <= check;\n"+
"                                when \"0010\" => \n"+
"                                   check := std_logic_vector(to_unsigned(0,128));\n"+
"                                   check := std_logic_vector(resize(signed((signed(rs3(15 downto 0)) * signed(rs2(15 downto 0)))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_16bit))) then\n"+
"                                      check(15 downto 0) := check_pos_16bit;\n"+
"                                   elsif ((signed(check) < signed(check_neg_16bit))) then\n"+
"                                      check(15 downto 0) := check_neg_16bit;\n"+
"                                   end if;\n"+
"                                   temp(15 downto 0) := std_logic_vector(check(15 downto 0));\n"+
"                                   check := std_logic_vector(resize(signed((signed(rs3(31 downto 16)) * signed(rs2(31 downto 16)))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_16bit))) then\n"+
"                                      check(31 downto 16) := check_pos_16bit;\n"+
"                                   elsif ((signed(check) < signed(check_neg_16bit))) then\n"+
"                                      check(31 downto 16) := check_neg_16bit;\n"+
"                                   end if;\n"+
"                                   temp(31 downto 16) := std_logic_vector(check(31 downto 16));\n"+
"                                   check := std_logic_vector(resize(signed((signed(rs3(47 downto 32)) * signed(rs2(47 downto 32)))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_16bit))) then\n"+
"                                      check(47 downto 32) := check_pos_16bit;\n"+
"                                   elsif ((signed(check) < signed(check_neg_16bit))) then\n"+
"                                      check(47 downto 32) := check_neg_16bit;\n"+
"                                   end if;\n"+
"                                   temp(47 downto 32) := std_logic_vector(check(47 downto 32));\n"+
"                                   check := std_logic_vector(resize(signed((signed(rs3(63 downto 48)) * signed(rs2(63 downto 48)))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_16bit))) then\n"+
"                                      check(63 downto 48) := check_pos_16bit;\n"+
"                                   elsif ((signed(check) < signed(check_neg_16bit))) then\n"+
"                                      check(63 downto 48) := check_neg_16bit;\n"+
"                                   end if;\n"+
"                                   temp(63 downto 48) := std_logic_vector(check(63 downto 48));\n"+
"                                   check := std_logic_vector(resize(signed((signed(rs3(79 downto 64)) * signed(rs2(79 downto 64)))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_16bit))) then\n"+
"                                      check(79 downto 64) := check_pos_16bit;\n"+
"                                   elsif ((signed(check) < signed(check_neg_16bit))) then\n"+
"                                      check(79 downto 64) := check_neg_16bit;\n"+
"                                   end if;\n"+
"                                   temp(79 downto 64) := std_logic_vector(check(79 downto 64));\n"+
"                                   check := std_logic_vector(resize(signed((signed(rs3(95 downto 80)) * signed(rs2(95 downto 80)))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_16bit))) then\n"+
"                                      check(95 downto 80) := check_pos_16bit;\n"+
"                                   elsif ((signed(check) < signed(check_neg_16bit))) then\n"+
"                                      check(95 downto 80) := check_neg_16bit;\n"+
"                                   end if;\n"+
"                                   temp(95 downto 80) := std_logic_vector(check(95 downto 80));\n"+
"                                   check := std_logic_vector(resize(signed((signed(rs3(111 downto 96)) * signed(rs2(111 downto 96)))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_16bit))) then\n"+
"                                      check(111 downto 96) := check_pos_16bit;\n"+
"                                   elsif ((signed(check) < signed(check_neg_16bit))) then\n"+
"                                      check(111 downto 96) := check_neg_16bit;\n"+
"                                   end if;\n"+
"                                   temp(111 downto 96) := std_logic_vector(check(111 downto 96));\n"+
"                                   check := std_logic_vector(resize(signed((signed(rs3(127 downto 112)) * signed(rs2(127 downto 112)))),check'length));\n"+
"                                   if ((signed(check) > signed(check_pos_16bit))) then\n"+
"                                      check(127 downto 112) := check_pos_16bit;\n"+
"                                   elsif ((signed(check) < signed(check_neg_16bit))) then\n"+
"                                      check(127 downto 112) := check_neg_16bit;\n"+
"                                   end if;\n"+
"                                   temp(127 downto 112) := std_logic_vector(check(127 downto 112));\n"+
"                                   rd <= temp;\n"+
"                                when \"0011\" => \n"+
"                                   temp(31 downto 0) := rs1(31 downto 0);\n"+
"                                   temp(63 downto 32) := rs1(31 downto 0);\n"+
"                                   temp(95 downto 64) := rs1(31 downto 0);\n"+
"                                   temp(127 downto 96) := rs1(31 downto 0);\n"+
"                                   rd <= temp;\n"+
"                                when \"0100\" => \n"+
"                                   check := std_logic_vector(to_unsigned(0,128));\n"+
"                                   temp := std_logic_vector(resize(unsigned((unsigned(rs1(15 downto 0)) + unsigned(rs2(15 downto 0)))),temp'length));\n"+
"                                   check(0) := temp(16);\n"+
"                                   temp := std_logic_vector(resize(unsigned((unsigned(rs1(31 downto 16)) + unsigned(rs2(31 downto 16)))),temp'length));\n"+
"                                   check(16) := temp(16);\n"+
"                                   temp := std_logic_vector(resize(unsigned((unsigned(rs1(47 downto 32)) + unsigned(rs2(47 downto 32)))),temp'length));\n"+
"                                   check(32) := temp(16);\n"+
"                                   temp := std_logic_vector(resize(unsigned((unsigned(rs1(63 downto 48)) + unsigned(rs2(63 downto 48)))),temp'length));\n"+
"                                   check(48) := temp(16);\n"+
"                                   temp := std_logic_vector(resize(unsigned((unsigned(rs1(79 downto 64)) + unsigned(rs2(79 downto 64)))),temp'length));\n"+
"                                   check(64) := temp(16);\n"+
"                                   temp := std_logic_vector(resize(unsigned((unsigned(rs1(95 downto 80)) + unsigned(rs2(95 downto 80)))),temp'length));\n"+
"                                   check(80) := temp(16);\n"+
"                                   temp := std_logic_vector(resize(unsigned((unsigned(rs1(111 downto 96)) + unsigned(rs2(111 downto 96)))),temp'length));\n"+
"                                   check(96) := temp(16);\n"+
"                                   temp := std_logic_vector(resize(unsigned((unsigned(rs1(127 downto 112)) + unsigned(rs2(127 downto 112)))),temp'length));\n"+
"                                   check(112) := temp(16);\n"+
"                                   rd <= check;\n"+
"                                when \"0101\" => \n"+
"                                   for i in 31 downto 0 loop\n"+
"                                       counter := 0;\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          exit;\n"+
"                                       else \n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                       check(31 downto 0) := std_logic_vector(to_unsigned(counter,32));\n"+
"                                   end loop;\n"+
"                                   for i in 63 downto 32 loop\n"+
"                                       counter := 0;\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          exit;\n"+
"                                       else \n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                       check(63 downto 32) := std_logic_vector(to_unsigned(counter,32));\n"+
"                                   end loop;\n"+
"                                   for i in 95 downto 64 loop\n"+
"                                       counter := 0;\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          exit;\n"+
"                                       else \n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                       check(95 downto 64) := std_logic_vector(to_unsigned(counter,32));\n"+
"                                   end loop;\n"+
"                                   for i in 127 downto 96 loop\n"+
"                                       counter := 0;\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          exit;\n"+
"                                       else \n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                       check(127 downto 96) := std_logic_vector(to_unsigned(counter,32));\n"+
"                                   end loop;\n"+
"                                   rd <= check;\n"+
"                                when \"0110\" => \n"+
"                                   if ((abs (signed(rs1(31 downto 0)))) > (abs (signed(rs2(31 downto 0))))) then\n"+
"                                      check(31 downto 0) := rs1(31 downto 0);\n"+
"                                   else \n"+
"                                      check(31 downto 0) := rs2(31 downto 0);\n"+
"                                   end if;\n"+
"                                   if ((abs (signed(rs1(63 downto 32)))) > (abs (signed(rs2(63 downto 32))))) then\n"+
"                                      check(63 downto 32) := rs1(63 downto 32);\n"+
"                                   else \n"+
"                                      check(63 downto 32) := rs2(63 downto 32);\n"+
"                                   end if;\n"+
"                                   if ((abs (signed(rs1(95 downto 64)))) > (abs (signed(rs2(95 downto 64))))) then\n"+
"                                      check(95 downto 64) := rs1(95 downto 64);\n"+
"                                   else \n"+
"                                      check(95 downto 64) := rs2(95 downto 64);\n"+
"                                   end if;\n"+
"                                   if ((abs (signed(rs1(127 downto 96)))) > (abs (signed(rs2(127 downto 96))))) then\n"+
"                                      check(127 downto 96) := rs1(127 downto 96);\n"+
"                                   else \n"+
"                                      check(127 downto 96) := rs2(127 downto 96);\n"+
"                                   end if;\n"+
"                                   rd <= check;\n"+
"                                when \"0111\" => \n"+
"                                   if ((abs (signed(rs1(31 downto 0)))) < (abs (signed(rs2(31 downto 0))))) then\n"+
"                                      check(31 downto 0) := rs1(31 downto 0);\n"+
"                                   else \n"+
"                                      check(31 downto 0) := rs2(31 downto 0);\n"+
"                                   end if;\n"+
"                                   if ((abs (signed(rs1(63 downto 32)))) < (abs (signed(rs2(63 downto 32))))) then\n"+
"                                      check(63 downto 32) := rs1(63 downto 32);\n"+
"                                   else \n"+
"                                      check(63 downto 32) := rs2(63 downto 32);\n"+
"                                   end if;\n"+
"                                   if ((abs (signed(rs1(95 downto 64)))) < (abs (signed(rs2(95 downto 64))))) then\n"+
"                                      check(95 downto 64) := rs1(95 downto 64);\n"+
"                                   else \n"+
"                                      check(95 downto 64) := rs2(95 downto 64);\n"+
"                                   end if;\n"+
"                                   if ((abs (signed(rs1(127 downto 96)))) < (abs (signed(rs2(127 downto 96))))) then\n"+
"                                      check(127 downto 96) := rs1(127 downto 96);\n"+
"                                   else \n"+
"                                      check(127 downto 96) := rs2(127 downto 96);\n"+
"                                   end if;\n"+
"                                   rd <= check;\n"+
"                                when \"1000\" => \n"+
"                                   if (rs2(31) = '1') then\n"+
"                                      temp := std_logic_vector(resize(signed(rs1(31 downto 0)) * (- 1),temp'length));\n"+
"                                      if (temp <= check_neg_int) then\n"+
"                                         temp := std_logic_vector(resize((signed(check_neg_int)),temp'length));\n"+
"                                      end if;\n"+
"                                   else \n"+
"                                      temp := std_logic_vector(resize(signed(rs1(31 downto 0)),temp'length));\n"+
"                                   end if;\n"+
"                                   check(31 downto 0) := temp(31 downto 0);\n"+
"                                   if (rs2(63) = '1') then\n"+
"                                      temp := std_logic_vector(resize(signed(rs1(63 downto 32)) * (- 1),temp'length));\n"+
"                                      if (temp <= check_neg_int) then\n"+
"                                         temp := std_logic_vector(resize((signed(check_neg_int)),temp'length));\n"+
"                                      end if;\n"+
"                                   else \n"+
"                                      temp := std_logic_vector(resize(signed(rs1(63 downto 32)),temp'length));\n"+
"                                   end if;\n"+
"                                   check(63 downto 32) := temp(63 downto 32);\n"+
"                                   if (rs2(95) = '1') then\n"+
"                                      temp := std_logic_vector(resize(signed(rs1(95 downto 64)) * (- 1),temp'length));\n"+
"                                      if (temp <= check_neg_int) then\n"+
"                                         temp := std_logic_vector(resize((signed(check_neg_int)),temp'length));\n"+
"                                      end if;\n"+
"                                   else \n"+
"                                      temp := std_logic_vector(resize(signed(rs1(95 downto 64)),temp'length));\n"+
"                                   end if;\n"+
"                                   check(95 downto 64) := temp(95 downto 64);\n"+
"                                   if (rs2(127) = '1') then\n"+
"                                      temp := std_logic_vector(resize(signed(rs1(127 downto 96)) * (- 1),temp'length));\n"+
"                                      if (temp <= check_neg_int) then\n"+
"                                         temp := std_logic_vector(resize((signed(check_neg_int)),temp'length));\n"+
"                                      end if;\n"+
"                                   else \n"+
"                                      temp := std_logic_vector(resize(signed(rs1(127 downto 96)),temp'length));\n"+
"                                   end if;\n"+
"                                   check(127 downto 96) := temp(127 downto 96);\n"+
"                                   rd <= check;\n"+
"                                when \"1001\" => \n"+
"                                   counter := 0;\n"+
"                                   for i in 15 downto 0 loop\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   check(15 downto 0) := std_logic_vector(to_unsigned(counter,16));\n"+
"                                   counter := 0;\n"+
"                                   for i in 31 downto 16 loop\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   check(31 downto 16) := std_logic_vector(to_unsigned(counter,16));\n"+
"                                   counter := 0;\n"+
"                                   for i in 47 downto 32 loop\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   check(47 downto 32) := std_logic_vector(to_unsigned(counter,16));\n"+
"                                   counter := 0;\n"+
"                                   for i in 63 downto 48 loop\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   check(63 downto 48) := std_logic_vector(to_unsigned(counter,16));\n"+
"                                   counter := 0;\n"+
"                                   for i in 79 downto 64 loop\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   check(79 downto 64) := std_logic_vector(to_unsigned(counter,16));\n"+
"                                   counter := 0;\n"+
"                                   for i in 95 downto 80 loop\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   check(95 downto 80) := std_logic_vector(to_unsigned(counter,16));\n"+
"                                   counter := 0;\n"+
"                                   for i in 111 downto 96 loop\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   check(111 downto 96) := std_logic_vector(to_unsigned(counter,16));\n"+
"                                   counter := 0;\n"+
"                                   for i in 127 downto 112 loop\n"+
"                                       if (rs1(i) = '1') then\n"+
"                                          counter := counter + 1;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   check(127 downto 112) := std_logic_vector(to_unsigned(counter,16));\n"+
"                                   rd <= check;\n"+
"                                when \"1010\" => \n"+
"                                   temp := std_logic_vector(resize((rs2(6), rs2(5), rs2(4), rs2(3), rs2(2), rs2(1), rs2(0)),temp'length));\n"+
"                                   check := rs1;\n"+
"                                   for i in to_integer(unsigned(temp)) downto 0 loop\n"+
"                                       counter := 0;\n"+
"                                       if (rs1(0) = '1') then\n"+
"                                          counter := 1;\n"+
"                                       else \n"+
"                                          counter := 0;\n"+
"                                       end if;\n"+
"                                       check := std_logic_vector(shift_right(signed(check),1));\n"+
"                                       if (unsigned(temp) > 0) then\n"+
"                                          if (counter = 1) then\n"+
"                                             check(127) := '1';\n"+
"                                          else \n"+
"                                             check(127) := '0';\n"+
"                                          end if;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   rd <= check;\n"+
"                                when \"1011\" => \n"+
"                                   temp := std_logic_vector(resize((rs2(4), rs2(3), rs2(2), rs2(1), rs2(0)),temp'length));\n"+
"                                   check(31 downto 0) := rs1(31 downto 0);\n"+
"                                   for i in to_integer(unsigned(temp)) downto 0 loop\n"+
"                                       counter := 0;\n"+
"                                       if (rs1(0) = '1') then\n"+
"                                          counter := 1;\n"+
"                                       else \n"+
"                                          counter := 0;\n"+
"                                       end if;\n"+
"                                       check := std_logic_vector(shift_right(signed(check),1));\n"+
"                                       if (unsigned(temp) > 0) then\n"+
"                                          if (counter = 1) then\n"+
"                                             check(31) := '1';\n"+
"                                          else \n"+
"                                             check(31) := '0';\n"+
"                                          end if;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   temp2(31 downto 0) := check(31 downto 0);\n"+
"                                   temp := std_logic_vector(resize((rs2(36), rs2(35), rs2(34), rs2(33), rs2(32)),temp'length));\n"+
"                                   check(63 downto 32) := rs1(63 downto 32);\n"+
"                                   for i in to_integer(unsigned(temp)) downto 0 loop\n"+
"                                       counter := 0;\n"+
"                                       if (rs1(0) = '1') then\n"+
"                                          counter := 1;\n"+
"                                       else \n"+
"                                          counter := 0;\n"+
"                                       end if;\n"+
"                                       check := std_logic_vector(shift_right(signed(check),1));\n"+
"                                       if (unsigned(temp) > 0) then\n"+
"                                          if (counter = 1) then\n"+
"                                             check(63) := '1';\n"+
"                                          else \n"+
"                                             check(63) := '0';\n"+
"                                          end if;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   temp2(63 downto 32) := check(63 downto 32);\n"+
"                                   temp := std_logic_vector(resize((rs2(68), rs2(67), rs2(66), rs2(65), rs2(64)),temp'length));\n"+
"                                   check(95 downto 64) := rs1(95 downto 64);\n"+
"                                   for i in to_integer(unsigned(temp)) downto 0 loop\n"+
"                                       counter := 0;\n"+
"                                       if (rs1(0) = '1') then\n"+
"                                          counter := 1;\n"+
"                                       else \n"+
"                                          counter := 0;\n"+
"                                       end if;\n"+
"                                       check := std_logic_vector(shift_right(signed(check),1));\n"+
"                                       if (unsigned(temp) > 0) then\n"+
"                                          if (counter = 1) then\n"+
"                                             check(95) := '1';\n"+
"                                          else \n"+
"                                             check(95) := '0';\n"+
"                                          end if;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   temp2(95 downto 64) := check(95 downto 64);\n"+
"                                   temp := std_logic_vector(resize((rs2(100), rs2(99), rs2(98), rs2(97), rs2(96)),temp'length));\n"+
"                                   check(127 downto 96) := rs1(127 downto 96);\n"+
"                                   for i in to_integer(unsigned(temp)) downto 0 loop\n"+
"                                       counter := 0;\n"+
"                                       if (rs1(0) = '1') then\n"+
"                                          counter := 1;\n"+
"                                       else \n"+
"                                          counter := 0;\n"+
"                                       end if;\n"+
"                                       check := std_logic_vector(shift_right(signed(check),1));\n"+
"                                       if (unsigned(temp) > 0) then\n"+
"                                          if (counter = 1) then\n"+
"                                             check(127) := '1';\n"+
"                                          else \n"+
"                                             check(127) := '0';\n"+
"                                          end if;\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   temp2(127 downto 96) := check(127 downto 96);\n"+
"                                   rd <= temp2;\n"+
"                                when \"1100\" => \n"+
"                                   for i in 0 to 7 loop\n"+
"                                       temp := std_logic_vector(resize((rs2(16 * i + 3), rs2(16 * i + 2), rs2(16 * i + 1), rs2(16 * i)),temp'length));\n"+
"                                       check((16 * i + 15) downto (16 * i)) := rs1((16 * i + 15) downto (16 * i));\n"+
"                                       temp2((16 * i + 15) downto (16 * i)) := std_logic_vector(shift_left(unsigned(check(16 * i + 15 downto (16 * i))),to_integer(unsigned(temp))));\n"+
"                                   end loop;\n"+
"                                   rd <= temp2;\n"+
"                                when \"1101\" => \n"+
"                                   for i in 0 to 7 loop\n"+
"                                       temp(16 * i + 15 downto i) := std_logic_vector(unsigned(rs2(16 * i + 15 downto i)) - unsigned(rs1(16 * i + 15 downto i)));\n"+
"                                   end loop;\n"+
"                                   rd <= temp;\n"+
"                                when \"1110\" => \n"+
"                                   check := std_logic_vector(to_unsigned(0,128));\n"+
"                                   for i in 0 to 7 loop\n"+
"                                       temp := std_logic_vector(signed(rs2(16 * i + 15 downto i)) - signed(rs1(16 * i + 15 downto i)));\n"+
"                                       if ((signed(temp) > signed(check_pos_16bit))) then\n"+
"                                          check(16 * i + 15 downto i) := check_pos_16bit;\n"+
"                                       elsif ((signed(check) < signed(check_neg_16bit))) then\n"+
"                                          check(16 * i + 15 downto i) := check_neg_16bit;\n"+
"                                       else \n"+
"                                          check(16 * i + 15 downto i) := temp(15 downto 0);\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   rd <= check;\n"+
"                                when \"1111\" => \n"+
"                                   for i in 0 to 127 loop\n"+
"                                       if ((rs1(i) = '1' and rs2(i) = '1') or (rs1(i) = '0' and rs2(i) = '0')) then\n"+
"                                          temp(i) := '0';\n"+
"                                       else \n"+
"                                          temp(i) := '1';\n"+
"                                       end if;\n"+
"                                   end loop;\n"+
"                                   rd <= temp;\n"+
"                                when others => \n"+
"                                   null;\n"+
"                              end case;\n"+
"                           when others => \n"+
"                              null;\n"+
"                         end case;\n"+
"                       end process;\n"+
"                      "
   RECT (1040,240,1441,640)
   MARGINS (20,20)
   SYNTAXCOLORED
   SHOWTEXT
   CORNER 10
   VTX (  24, 27, 30, 33, 36, 39, 42, 46, 48, 51, 54 )
   VARIABLES
   {
    #UPDATE_SENS_LIST="0"
   }
   LIST (  46, 48, 51, 54 )
  }
  INSTANCE  3, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #CUSTOM_NAME=""
    #LIBRARY="#terminals"
    #REFERENCE="rs1(127:0)"
    #SYMBOL="BusInput"
    #SYMBOL_GLOBALLY_UNIQUE_IDENTIFIER=""
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
   COORD (900,380)
   VERTEXES ( (2,49) )
  }
  INSTANCE  4, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #CUSTOM_NAME=""
    #LIBRARY="#terminals"
    #REFERENCE="rs2(127:0)"
    #SYMBOL="BusInput"
    #SYMBOL_GLOBALLY_UNIQUE_IDENTIFIER=""
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
   COORD (900,260)
   VERTEXES ( (2,52) )
  }
  INSTANCE  5, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #CUSTOM_NAME=""
    #LIBRARY="#terminals"
    #REFERENCE="rs3(127:0)"
    #SYMBOL="BusInput"
    #SYMBOL_GLOBALLY_UNIQUE_IDENTIFIER=""
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
   COORD (900,340)
   VERTEXES ( (2,55) )
  }
  INSTANCE  6, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusInput"
    #CUSTOM_NAME=""
    #LIBRARY="#terminals"
    #REFERENCE="opcode(24:0)"
    #SYMBOL="BusInput"
    #SYMBOL_GLOBALLY_UNIQUE_IDENTIFIER=""
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
   COORD (900,300)
   VERTEXES ( (2,45) )
  }
  INSTANCE  7, 0, 0
  {
   VARIABLES
   {
    #COMPONENT="BusOutput"
    #CUSTOM_NAME=""
    #LIBRARY="#terminals"
    #REFERENCE="rd(127:0)"
    #SYMBOL="BusOutput"
    #SYMBOL_GLOBALLY_UNIQUE_IDENTIFIER=""
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
   COORD (1540,460)
   VERTEXES ( (2,25) )
  }
  TEXT  8, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (849,380,849,380)
   ALIGN 6
   PARENT 3
  }
  TEXT  9, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (849,260,849,260)
   ALIGN 6
   PARENT 4
  }
  TEXT  10, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (849,340,849,340)
   ALIGN 6
   PARENT 5
  }
  TEXT  11, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (849,300,849,300)
   ALIGN 6
   PARENT 6
  }
  TEXT  12, 0, 0
  {
   TEXT "$#REFERENCE"
   RECT (1591,460,1591,460)
   ALIGN 4
   PARENT 7
  }
  NET BUS  13, 0, 0
  {
   VARIABLES
   {
    #NAME="rs1_temp(31:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  14, 0, 0
  {
   VARIABLES
   {
    #NAME="rs1_temp_long(63:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  15, 0, 0
  {
   VARIABLES
   {
    #NAME="rs2_temp(15:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  16, 0, 0
  {
   VARIABLES
   {
    #NAME="rs2_temp_long(31:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  17, 0, 0
  {
   VARIABLES
   {
    #NAME="rs3_temp(15:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  18, 0, 0
  {
   VARIABLES
   {
    #NAME="rs3_temp_long(31:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  19, 0, 0
  {
   VARIABLES
   {
    #NAME="opcode(24:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  20, 0, 0
  {
   VARIABLES
   {
    #NAME="rd(127:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  21, 0, 0
  {
   VARIABLES
   {
    #NAME="rs1(127:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  22, 0, 0
  {
   VARIABLES
   {
    #NAME="rs2(127:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  NET BUS  23, 0, 0
  {
   VARIABLES
   {
    #NAME="rs3(127:0)"
    #VHDL_TYPE="STD_LOGIC_VECTOR"
   }
  }
  VTX  24, 0, 0
  {
   COORD (1441,460)
  }
  VTX  25, 0, 0
  {
   COORD (1540,460)
  }
  BUS  26, 0, 0
  {
   NET 20
   VTX 24, 25
  }
  VTX  27, 0, 0
  {
   COORD (1441,500)
  }
  VTX  28, 0, 0
  {
   COORD (1520,500)
  }
  BUS  29, 0, 0
  {
   NET 13
   VTX 27, 28
  }
  VTX  30, 0, 0
  {
   COORD (1441,420)
  }
  VTX  31, 0, 0
  {
   COORD (1520,420)
  }
  BUS  32, 0, 0
  {
   NET 14
   VTX 30, 31
  }
  VTX  33, 0, 0
  {
   COORD (1441,260)
  }
  VTX  34, 0, 0
  {
   COORD (1520,260)
  }
  BUS  35, 0, 0
  {
   NET 15
   VTX 33, 34
  }
  VTX  36, 0, 0
  {
   COORD (1441,300)
  }
  VTX  37, 0, 0
  {
   COORD (1520,300)
  }
  BUS  38, 0, 0
  {
   NET 16
   VTX 36, 37
  }
  VTX  39, 0, 0
  {
   COORD (1441,380)
  }
  VTX  40, 0, 0
  {
   COORD (1520,380)
  }
  BUS  41, 0, 0
  {
   NET 17
   VTX 39, 40
  }
  VTX  42, 0, 0
  {
   COORD (1441,340)
  }
  VTX  43, 0, 0
  {
   COORD (1520,340)
  }
  BUS  44, 0, 0
  {
   NET 18
   VTX 42, 43
  }
  VTX  45, 0, 0
  {
   COORD (900,300)
  }
  VTX  46, 0, 0
  {
   COORD (1040,300)
  }
  BUS  47, 0, 0
  {
   NET 19
   VTX 45, 46
  }
  VTX  48, 0, 0
  {
   COORD (1040,380)
  }
  VTX  49, 0, 0
  {
   COORD (900,380)
  }
  BUS  50, 0, 0
  {
   NET 21
   VTX 48, 49
  }
  VTX  51, 0, 0
  {
   COORD (1040,260)
  }
  VTX  52, 0, 0
  {
   COORD (900,260)
  }
  BUS  53, 0, 0
  {
   NET 22
   VTX 51, 52
  }
  VTX  54, 0, 0
  {
   COORD (1040,340)
  }
  VTX  55, 0, 0
  {
   COORD (900,340)
  }
  BUS  56, 0, 0
  {
   NET 23
   VTX 54, 55
  }
 }
 
}

